{"version":3,"sources":["../src/test/example.js"],"names":[],"mappings":";;;;;;;;;;eAKW;;AAFX,IAAM,MAAM,SAAN,GAAM,GAAM,EAAN;;AAEZ,SAAW,iBAAX;YACQ;;;;;;;iBAAqB,gBAAS,GAAT,EAAc,mBAAd;;;;AAArB;;gBAEF,cAAc,GAAd,IAAqB,aAAa,GAAb;;;;;2CAChB;;;2CAEA;;;;;;;;CANX;;AAUA,IAAI,WAAW,mBAAX;;;AAGJ,IAAI,aAAa,SAAS,IAAT,EAAb;;;AAGJ,iBAAO,SAAP,CAAiB,UAAjB,EAA6B;AAC3B,SAAO,gBAAS,GAAT,EAAc,mBAAd,CAAP;AACA,QAAM,KAAN;CAFF;;;AAMA,IAAI,cAAc,SAAS,IAAT,CAAc,EAAE,YAAY,GAAZ,EAAhB,CAAd;;;AAGJ,iBAAO,SAAP,CAAiB,WAAjB,EAA8B;AAC5B,SAAO,MAAP;AACA,QAAM,IAAN;CAFF","file":"example.js","sourcesContent":["import assert from 'assert'\nimport { callback } from '../'\n\nconst get = () => {}\n\nfunction * checkGithubStatus () {\n  let { statusCode } = yield callback(get, 'http://github.com')\n\n  if (statusCode >= 200 && statusCode < 300) {\n    return 'up'\n  } else {\n    return 'down'\n  }\n}\n\nlet iterator = checkGithubStatus()\n\n// Start the function\nlet firstYield = iterator.next()\n\n// Expect the first instruction to be a request to github.com\nassert.deepEqual(firstYield, {\n  value: callback(get, 'http://github.com'),\n  done: false\n})\n\n// Mock a 404 response\nlet secondYield = iterator.next({ statusCode: 404 })\n\n// Make sure the function returns \"down\"\nassert.deepEqual(secondYield, {\n  value: 'down',\n  done: true\n})\n"]}